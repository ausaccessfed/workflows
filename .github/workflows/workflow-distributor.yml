name: "Distribute Workflows"
on:
  workflow_dispatch:
  # TODO: disable push
  push:
jobs:
  distribution:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          github-token: ${{secrets.ALL_REPO_SCOPED_TOKEN}}
          script: |
            const fs = require('fs')
            const {
                repo: {
                    owner,
                    repo
                }
            } = context
            console.log(context)
            const committer = {
              name: "todo"
              email:  "todo"
            }
            //const repos = ${{ vars.RENOVATE_REPOSITORIES }}
            const repos = ['ausaccessfed/reporting-service']
            const globber = await glob.create('**/**/distributions/*.yml', {followSymbolicLinks: false})
            const files = await globber.glob()

            for(let i = 0;i < files.length;i++) {
              const fileName = files[i]
              const fileNameCleaned = files[i].split("/").pop()
              const content = fs.readFileSync(fileName,{ encoding: 'utf8', flag: 'r' })
              const branch = `feature/${fileNameCleaned}`
              for(const repo in repos) {
                //TODO: this will need to change based on which repo
                const defaultBranch = "master"
                const message = `Updating ${fileNameCleaned}`
                await github.rest.repos.createOrUpdateFileContents({
                  owner,
                  repo,
                  branch,
                  path: `.github/workflows/${fileNameCleaned}`
                  message,
                  content,
                  committer 
                })
                await github.rest.pulls.create({
                  owner,
                  repo,
                  head: branch,
                  base: defaultBranch,
                  title: message,
                  body: message
                })
              }
            }
