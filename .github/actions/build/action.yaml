name: 'Build and push'
description: ''
inputs:
  BRANCH_NAME:
    description: 'branch to checkout'
    default: ''
  ROLE:
    description: 'aws role to be used'
    default: ''
  ECR_REPOSITORY:
    description: 'ecr repository to login to'
    default: ''
  GITHUB_TOKEN:
    description: 'github token used to auth to ghcr'
    default: ''
  GITHUB_ACTOR:
    description: 'github actor used to auth to ghcr'
    default: ''
  IMAGE_PLATFORMS:
    description: 'cache from strings'
    required: true
  IMAGE_BUILD_ARGS:
    description: 'cache from strings'
    default: ''
  IMAGE_TARGET:
    description: 'cache from strings'
    required: true
  IMAGE_CACHE_TO:
    description: 'cache from strings'
    default: ''
  IMAGE_CACHE_FROM:
    description: 'cache from strings'
    default: ''
  IMAGE_TAGS:
    description: 'cache from strings'
    required: true
  IMAGE_LOAD:
    description: 'cache from strings'
    required: true
  IMAGE_PUSH:
    description: 'cache from strings'
    required: true
  IMAGE_FORCE_REBUILD:
    default: 'false'
    description: 'forces a full rebuild'

runs:
  using: 'composite'
  steps:
    - uses: ausaccessfed/workflows/.github/actions/init@feature/moving-ro-more-async
      with:
        BRANCH_NAME: ${{ inputs.BRANCH_NAME }}
        ROLE: ${{ inputs.ROLE }}
        ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        GITHUB_ACTOR: ${{ inputs.GITHUB_ACTOR }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

    - name: Force docker image to be rebuilt from scratch
      shell: bash
      if: inputs.IMAGE_FORCE_REBUILD == 'true'
      run: |
        echo "`date "+%Y-%m-%d %H:%M:%S"` REBUILD" >> .FORCE_NEW_DOCKER_BUILD

    - name: clean platform
      shell: bash
      id: vars
      run: |
        echo "IMAGE_CACHE_FROM=$(echo "${{ inputs.IMAGE_CACHE_FROM }}" | tr / _ )" >> $GITHUB_OUTPUT
        echo "IMAGE_CACHE_TO=$(echo "${{ inputs.IMAGE_CACHE_TO }}" | tr / _ )" >> $GITHUB_OUTPUT
        echo "IMAGE_TAGS=$(echo "${{ inputs.IMAGE_TAGS }}" | tr / _ )" >> $GITHUB_OUTPUT

    - name: Build OCI Image
      id: build
      uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c # v6.3.0
      with:
        context: .
        push: ${{ inputs.IMAGE_PUSH }}
        load: ${{ inputs.IMAGE_LOAD }}
        tags: |
          ${{ steps.vars.outputs.IMAGE_TAGS }}
        cache-from: |
          ${{ steps.vars.outputsIMAGE_CACHE_FROM }}
        cache-to: |
          ${{ steps.vars.outputsIMAGE_CACHE_TO }}
        target: ${{ inputs.IMAGE_TARGET }}
        build-args: |
          ${{ inputs.IMAGE_BUILD_ARGS }}
        platforms: |
          ${{ inputs.IMAGE_PLATFORMS }}
