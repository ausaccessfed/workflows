name: 'Todo processor'
description: 'expected to be used in a pr context'
inputs:
  GITHUB_TOKEN:
    description: 'github token used to auth to api'
    default: ''
  GPG_PRIVATE_KEY:
    description: 'GPG key to sign commits with'
    required: true
  BACKFILL:
    description: 'If true, will backfill all TODOs in the repo'
    required: false
runs:
  using: 'composite'
  steps:
    - uses: ausaccessfed/workflows/.github/actions/branch_finder@main
      id: branch
      with:
        EVENT_NAME: ${{ github.event_name }}
    - uses: ausaccessfed/workflows/.github/actions/init@main
      with:
        FETCH_DEPTH: '0'
        BRANCH_NAME: ${{ steps.branch.outputs.BRANCH_NAME }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
    - shell: bash
      if: inputs.BACKFILL == 'true'
      id: backfill
      run: |
        if [ "${{ steps.branch.outputs.BRANCH_NAME }}" = "main" ] || [ "${{ steps.branch.outputs.BRANCH_NAME }}" = "master" ]; then
          echo "Cannot backfill on main or master"
          exit 1
        fi
        echo "MANUAL_COMMIT_REF=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        echo "MANUAL_BASE_REF=$(git rev-list --max-parents=0 HEAD)" >> $GITHUB_OUTPUT
    - name: 'TODO to Issue'
      uses: 'alstr/todo-to-issue-action@c45b007d85c8edf3365b139a9d4c65793e7c674f' # v5.1.13
      with:
        INSERT_ISSUE_URLS: 'true'
        CLOSE_ISSUES: 'true'
        TOKEN: ${{ inputs.GITHUB_TOKEN }}
        IDENTIFIERS: |
          [
            { "name": "TODO", "labels": ["todo"] },
            { "name": "BUG", "labels": ["bug"] },
            { "name": "ENHANCEMENT", "labels": ["enhancement"] },
            { "name": "PROPOSAL", "labels": ["proposal"] }
          ]
      env:
        MANUAL_COMMIT_REF: ${{ steps.backfill.outputs.MANUAL_COMMIT_REF }}
        MANUAL_BASE_REF: ${{ steps.backfill.outputs.MANUAL_BASE_REF }}
    - uses: ausaccessfed/workflows/.github/actions/committer@main
      with:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        GITHUB_ACTOR: Terraform
        GITHUB_ACTOR_EMAIL: fishwhack9000+terraform@gmail.com
        GPG_PRIVATE_KEY: ${{ inputs.GPG_PRIVATE_KEY }}
