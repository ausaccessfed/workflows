name: 'Summarise'
description: ''
inputs:
  OUTPUT_FILES:
    description: 'Output files, csv'
  SLACK_WEBHOOK_URL:
    description: 'If not null, will post to slack'
    default: ''
  ENABLE_PR:
    description: 'If true, will post pr as comment (STILL TODO)'
    default: 'false'
  CREATE_COMMENT:
    description: 'If true, will create a new comment, if false will delete existing comment'
    default: 'true'
  PR_NUMBER:
    description: 'PR number to post comment to'
    default: ''
  ENABLE_ACTION_SUMMARY:
    description: 'If true, will post to summary tab in flow'
    default: 'true'
  TITLES:
    description: 'Summary Titles, csv'
  SUCCESS:
    description: 'If the task was successful'
runs:
  using: 'composite'
  steps:
    - id: split_file
      shell: bash
      run: |
        CHUNK_SIZE=$((900 * 1024)) # 700KB in bytes

        index=0
        for file in $(echo "${{ inputs.OUTPUT_FILES }}" | tr ',' ' '); do
          if [ -e "$file" ] && [ "$(cat "$file" | tr -d '[:space:]')" != "" ]; then
            FILE_SIZE=$(stat -c%s "$file")
            if [ $FILE_SIZE -gt $CHUNK_SIZE ]; then
              split -b $CHUNK_SIZE "$file" "chunk_${index}_"
              echo "$file split into chunks."
            else
              cp "$file" "chunk_${index}_aa"
              echo "$file is small enough, no need to split."
            fi
            index=$((index + 1))
          else
            echo "$file does not exist or is empty."
          fi
        done

        echo "FILE_COUNT=$index" >> $GITHUB_OUTPUT

    - if: inputs.ENABLE_PR == 'true' && steps.split_file.outputs.FILE_COUNT != '0'
      id: update-pull-request
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        github-token: ${{ github.token }}
        script: |
          const fs = require('fs')
          const run = require('https://raw.githubusercontent.com/ausaccessfed/workflows/main/scripts/scripts/pr_commenter.js')
          const create_comment = 'true' == "${{ inputs.CREATE_COMMENT }}"
          const titles = "${{ inputs.TITLES }}".split(",")
          const task_failed = "false" == "${{ inputs.SUCCESS }}"
          const issue_number = "${{ inputs.pr_number }}"
          await run({github, context, fs, create_comment, titles, task_failed, issue_number})

    - id: slack_message
      shell: bash
      if: inputs.SLACK_WEBHOOK_URL != '' && steps.split_file.outputs.FILE_COUNT != '0'
      run: |
        wget -O /tmp/slack_webhook.sh https://raw.githubusercontent.com/ausaccessfed/workflows/main/scripts/slack_webhook.sh
        chmod +x /tmp/slack_webhook.sh
        /tmp/slack_webhook.sh "${{ inputs.TITLES }}" "${{ inputs.SLACK_WEBHOOK_URL }}" "${{github.repository}}" "${{github.run_id}}" "false"

    - id: summary_tab
      if: inputs.ENABLE_ACTION_SUMMARY == 'true' && steps.split_file.outputs.FILE_COUNT != '0'
      shell: bash
      run: |
        wget -O /tmp/slack_webhook.sh https://raw.githubusercontent.com/ausaccessfed/workflows/main/scripts/action_summary.sh
        chmod +x /tmp/action_summary.sh
        /tmp/action_summary.sh "${{ inputs.TITLES }}""

    - id: throw_error
      shell: bash
      if: inputs.SUCCESS == 'failure' || inputs.SUCCESS == 'false'
      run: |
        for chunk in chunk_*; do
          cat $chunk
        done
        exit 1
